#include <iostream>
#include <vector>

/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 
 and 
, the first 
 terms will be:
        1, 2, 3, 5,8,13, 21, 34, 55, 89
By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
find the sum of the even-valued terms.
*/

/*
How to get Fibonacci sequence
1. Iterate from 1 to the Nth Fibonacci number given
2. Let's get an array
3. We will feed into this array, and the fibonacci
4. Fib1 = 0 + 1 = 1
   Fib2 = 2 + 1 = 
   Fib 3 = 2 + 2 = 5
*/

//How to solve:
/*
1. Get the Fibonacci sequence from code N = n(n-1) + n(n-2)
2. Store in an array
3. Find the even ones within 4, 000, 000(Should not exceed)
4. Sum them up
*/

std::vector<int> Fibonacci(int n){
   std::vector<int> baseArray;
   std::vector<int> fibArray;
   for(int i = 0; i < n; i++){
        baseArray[i] = i;
   }
    fibArray[0] = baseArray[0];
    fibArray[1] = baseArray[1];

    for(size_t i = 2; i < baseArray.size(); i++){
       
        fibArray[i] = baseArray[i - 1] + baseArray[i - 2];
  }
  return fibArray;
}


int main(){
        std::vector<int>myarray = Fibonacci(10);
        for(int i = 0; i  < myarray.size(); i++){
                std::cout << myarray[i] << std::endl;
        }
        
}